%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% TEST FILE - Simulate Scene
% What does an image look like through a given camera?
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Constants in camera
d0 = 100; 
d1 = 1;     d2 = 100;
r1 = 50;    r2 = -50;
n1 = 1.5;   na = 1;
sd = 10;
EFL = 50;
pixel_pitch = 0.02;
numAngSensors = 5;
f_lenslets = pixel_pitch*d2/(2*sd);
xrange = [-10 10];
yrange = [-10 5];
rawimg = zeros(


% Create camera
clear camera
camera(1) = struct('R', inf, 'd', d0, 'n', na, 'sd', inf);   % Object plane
camera(2) = struct('R', r1,'d', d1, 'n', n1, 'sd', sd);
camera(3) = struct('R', r2,'d', d2, 'n', na, 'sd', sd);
[camera, r2] = calc_lastr(camera, EFL); % set last radius of curvature, r4
[camera, d2] = calc_lastd(camera);      % set distance to image plane, d4

% Test Image: 4x4 mm  white square, centered in frame
% Trace 80,000 rays: every 5 um (0.005 mm), trace 100 rays with random
% angles
x = -4:.002:4;
for i = 1:numel(x)
    for j = 1:numel(x)
        xt = rand(100,1)*.2-.1;
        yt = rand(100,1)*.2-.1;
        for k = 1:numel(xt)
            [xout, xtout, yout, ytout] = traceRayForward(x(i), x(j), xt(k), yt(k), camera);
        end
    end
end
            


